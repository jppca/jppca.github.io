---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import CallToAction from '../../components/CallToAction.astro';
import Grid from '../../components/Grid.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import PostPreviewHome from '../../components/PostPreviewHome.astro';
import ContactCTA from '../../components/ContactCTA.astro';
import Skills from '../../components/Skills.astro';

const lang = Astro.params.lang;

// Import translations based on the current language
const translations = await import(`../../locales/${lang}.json`);

const posts = (await getCollection('posts'))
  .filter(post => post.data.lang === lang)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'es' } },
  ];
}
---

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title={translations.indexPage.title}
					tagline={translations.indexPage.tagline}
					align="start"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" /> {translations.indexPage.pill}</Pill>
					</div>
				  <p>{translations.indexPage.description1}</p>
				  <p>{translations.indexPage.description2}</p>
				</Hero>

				<img
					alt="io"
					width="480"
					height="620"
					src="/assets/portrait.png"
					loading="lazy"
				/>
				</header>
			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>{translations.indexPage.projectsHeader}</h3>
					<p>{translations.indexPage.projectsDescription}</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							posts.map((post) => (
								<li>
									<PostPreviewHome post={post} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href={`/${lang}/posts/`}>
						{translations.indexPage.viewAll}
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 7;
		object-fit: cover;
		object-position: top;
		border-radius: .75rem;
		box-shadow: var(--shadow-md);
	}

	.cta {
		display: flex;
    justify-content: center;
    height: max-content;
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}
		.hero p {
			font-size: var(--text-lg);
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 1.5rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>
