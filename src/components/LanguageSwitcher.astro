---
const { currentLang } = Astro.props;
---

<language-switcher>
  <button class="en" translate="no">En</button>
  <button class="es" translate="no">Es</button>
</language-switcher>

<style>
  button {
    border-radius: 100%;
    padding: 8px;
    color: white;
    background-color: #7611a65e;
    border: none;
  }
  .active {
    background-color: #7611a6;
  }
</style>

<script>
  class LanguageSwitcher extends HTMLElement {
    constructor() {
      super();

      const buttonEn = this.querySelector('.en');
      const buttonEs = this.querySelector('.es');

      // Set the language and update URL.
      const setLanguage = (lang) => {
        let pathSegments = window.location.pathname.split('/').filter(Boolean);

        // Replace the first occurrence of 'en' or 'es' in the URL.
        pathSegments = pathSegments.map(segment => {
          if (segment === 'en' || segment === 'es') {
            return lang;
          }
          return segment;
        });

        window.location.pathname = '/' + pathSegments.join('/');
      };

      // Load the language from localStorage and set active class.
      const savedLang = localStorage.getItem('selectedLang') || 'en';
      if (savedLang === 'en') {
        buttonEn.classList.add('active');
      } else {
        buttonEs.classList.add('active');
      }

      // Event listeners for buttons.
      buttonEn.addEventListener('click', () => {
        buttonEs.classList.remove('active');
        buttonEn.classList.add('active');
        localStorage.setItem('selectedLang', 'en');
        setLanguage('en');
      });

      buttonEs.addEventListener('click', () => {
        buttonEn.classList.remove('active');
        buttonEs.classList.add('active');
        localStorage.setItem('selectedLang', 'es');
        setLanguage('es');
      });
    }
  }

  customElements.define('language-switcher', LanguageSwitcher);
</script>
